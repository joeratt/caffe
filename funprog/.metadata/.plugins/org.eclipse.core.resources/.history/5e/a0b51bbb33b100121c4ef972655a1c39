package week5

object ImplicitParameters {

def msortPoly(xs: List[T])(lt: (T,T) => Boolean): List[T] = {
    val n = xs.length / 2
    if (n == 0) xs
    else {

      val (fst, snd) = xs splitAt n
      merge2(msort(fst), msort(snd))
    }
  }

def mergeGeneric(xs: List[T], ys: List[T]): List[T] =
    (xs, ys) match {
      case (Nil, ys) => ys
      case (xs, Nil) => xs
      case (x :: xs1, y :: ys1) =>
        if (x < y) x :: mergeGeneric(xs1, ys)
        else y :: mergeGeneric(xs, ys1)
    }
}